{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x35BB4024f554500d48F685A6E47daD36983F5B31",
    "txHash": "0xd23d911fe899e961988c17f274a4ac83ccfa6b2996d641213edeadfc30017314"
  },
  "proxies": [
    {
      "address": "0x54c8a6242374fa75B6e781da79f6EB30dE1c6409",
      "txHash": "0x3bb7ab656694cc63c6bf80f97c3fece1ea5768eba36e92bcbdcaa725c7b3cfed",
      "kind": "transparent"
    },
    {
      "address": "0x15f88C21f004D0a544909F57b9e670432bD7CfA7",
      "txHash": "0x090d17eb712feee5d14ac5639a9c2ea25b44c00cd7ad60aa45c7deadb617b292",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e76fb7a0778fd3093f64e3f83a3f4e8017d76b8fc57274f565bca4df569cd0bf": {
      "address": "0xfDBFc1e26CBC451C833302c9125533bB76f95E9C",
      "txHash": "0xb6c5706c07092a55c4b9ab1be555697fb177432c1670915a2ec525199cba6c51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1334",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2224",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1334",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1334",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1586",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2224": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1334": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1586": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
