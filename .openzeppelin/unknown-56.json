{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD34fF53369b479F34Eb9f1c7760D5A67d310fE41",
    "txHash": "0x7b196f53af26ed84c6ada2d6b257a20557bbd0a407136acd7bee61835812b6a9"
  },
  "proxies": [
    {
      "address": "0xc50323b2FB63A68cf5C039fEBAd6B8ECc6Be4328",
      "txHash": "0xb949386a231c5228e4d977d1f9ec701edc23e241e0f7e22b3c17640b9eb32422",
      "kind": "transparent"
    },
    {
      "address": "0x77C6BB15eac53C710964b19911A59DA473412847",
      "txHash": "0x209e9df3475243133bd1ac59a9bcb5821f808a22c6c880b86d8efece47ecf2e3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cfcc534490603919c1443759cfc97fa846e0c33278a817243a2b7e8dfa73250c": {
      "address": "0xA56e9d0CCac4d63cD93d9406Bc90032Fd3B92934",
      "txHash": "0x304e93428e22d6fd403feec849a78a35fcf9657782067cc888d8df922764557e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1367",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2257",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1367",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1367",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1619",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2257": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1367": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1619": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "629c36a0a2aadd598438f9564b03a5e97f1d7fa0b433c820e1608cc54a70a7f4": {
      "address": "0x1B8C88114e0f2B58DFdde1aA5a27AFf79e267f0c",
      "txHash": "0xd97d2f01116f781d4133cc86edb4c711b2a8e60f2024c398f6add0406f21132e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1462",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2352",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1462",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1462",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1714",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2352": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1462": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1714": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c77c058bdb7f8a07b9b3235b526ba0ab7253f0b428fe608662b984f567035f51": {
      "address": "0xbaECD87A023E03357Ce1fc4E7fd89D03d10ED483",
      "txHash": "0xe48592c5a24a55df85c1c3b1e636bf202ba64240a2610295cb7b13895a7b5b3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1460",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2350",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1460",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1460",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1712",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2350": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1460": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1712": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef7b4fae94e19103b48255a90f5f3941b6ab2250be960db9fa850dda4a4bb5ac": {
      "address": "0x7B49880A591355781E93646a2faF9cf72Ff785c7",
      "txHash": "0x7b183749fd1a7eea0fdb2717ca0c2aacf508730f2758447bc7ffa360d7a51d0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1469",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2359",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1469",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1469",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1721",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2359": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1469": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1721": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32ede49a1add430cc1bb045a570dc01ff3790416911ebc89a8e473e07e6e6a92": {
      "address": "0x71EBFDc433720F94429B8F28C1cae477dba05Ac2",
      "txHash": "0x3206f0e7655ac307124665d0337896e9602bf578df9457e6b86e199ce4f97ec7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1478",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2368",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1478",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1478",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1730",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2368": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1478": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1730": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c8b92864638b61142d09b04b225283fb43ce49893a1629c06fdfe2b12ed35ba": {
      "address": "0x7D5334A17Ec19d22568E3167e4d5263a33877e8B",
      "txHash": "0xdf1b23a3e4371cd50b4421b35723ef3ab8961613ccd4aad3750944fadff7a3e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1478",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2368",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1478",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1478",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1730",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2368": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1478": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1730": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5df89fb3e46fe789eeceb8b85850f9af56ed6727420d863422a1a40dbd2e89a": {
      "address": "0x1Bf25F929aE24e72210283db58Ce306ed8AD6ff5",
      "txHash": "0x98b3784992cfcd7e3f30478fd8aa9453044734c72803d3c0fa6fc850e0cdf1c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "lib/WhitelistUpgradeable.sol:8"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "_disable",
            "type": "t_bool",
            "src": "lib/WhitelistUpgradeable.sol:9"
          },
          {
            "contract": "WhitelistUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/WhitelistUpgradeable.sol:43"
          },
          {
            "contract": "VaultController",
            "label": "keeper",
            "type": "t_address",
            "src": "lib/VaultController.sol:27"
          },
          {
            "contract": "VaultController",
            "label": "_stakingToken",
            "type": "t_contract(IBEP20)1484",
            "src": "lib/VaultController.sol:28"
          },
          {
            "contract": "VaultController",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "lib/VaultController.sol:34"
          },
          {
            "contract": "AIStaking",
            "label": "BURN_ADDRESS",
            "type": "t_address",
            "src": "AIStaking.sol:27"
          },
          {
            "contract": "AIStaking",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)2374",
            "src": "AIStaking.sol:30"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE",
            "type": "t_contract(IBEP20)1484",
            "src": "AIStaking.sol:38"
          },
          {
            "contract": "AIStaking",
            "label": "XBN",
            "type": "t_contract(IBEP20)1484",
            "src": "AIStaking.sol:39"
          },
          {
            "contract": "AIStaking",
            "label": "CAKE_MASTER_CHEF",
            "type": "t_contract(IMasterChef)1736",
            "src": "AIStaking.sol:40"
          },
          {
            "contract": "AIStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "AIStaking.sol:49"
          },
          {
            "contract": "AIStaking",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:50"
          },
          {
            "contract": "AIStaking",
            "label": "_principal",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:51"
          },
          {
            "contract": "AIStaking",
            "label": "_depositedAt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "AIStaking.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IPancakeRouter02)2374": {
            "label": "contract IPancakeRouter02"
          },
          "t_contract(IBEP20)1484": {
            "label": "contract IBEP20"
          },
          "t_contract(IMasterChef)1736": {
            "label": "contract IMasterChef"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e3a746e92adbe7ae0066f8e00c1db360e582b9bc1bfb51a01bbc9f0b28bfccb": {
      "address": "0x648cbcFA2e1c56f044F5353a1F5E8b80919281b1",
      "txHash": "0x60b43566d79782a837a6b767f75f3939b31bd0074f6a0381eb9c5eb95e8002d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)871",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)871",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)871",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)871",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1761",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)871": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1761": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f71c99f4ef0ea8039ea76e7e2fd02fdb4fda7b17032415d1f63eb287f928c72e": {
      "address": "0x8e3e0502Ee6fB9311FA7fE00106CC58fb7062f84",
      "txHash": "0x1d98f1b6440037a4bec362281d6018390fe1cfb6a984a07a318c14f825217cbb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)879",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)879",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)879",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)879",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1769",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)879": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1769": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0b2d68d0e0fddf22855f5b20737522f5b81ce75b4cbb3b98cacb0638e6ffdcf8": {
      "address": "0xa20a6d336ee78Ec183f3b3A66F4BE8B7d7F733ec",
      "txHash": "0x097cab7c9564637d0be9763277bd594018b30e415eb530088838073d035402b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)889",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)889",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)889",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)889",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1779",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)889": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1779": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b55ea35eb87315b17fc6275999fe8ca3ad55af8e411fa165f79da19c605a8598": {
      "address": "0x5Cf5feAaa324A83688f6B13a6c3eAabEdb2B5846",
      "txHash": "0x7ab57726410f4a1c7f6073a405ac1b0ad8d85f78cd079c0938c0e9b79985097c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)950",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)950",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)950",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)950",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1840",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)950": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1840": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "31c5e9c1ed1ac2e61941f2c6beeeed0adec99a786aee584acf8292b3c4282903": {
      "address": "0xB5E017da2552E68F88A0C90F6D03Da17678608e8",
      "txHash": "0x7abbedff06af50200ed1442d07cab6bd96ffc0bda893d5dbf4002a3efddad0ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)964",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)964",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)964",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)964",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1854",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)964": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1854": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a66ebc9bf3f94dc3249bfd69dc1596e2cb4d0584726872445bc2a48355bcd53b": {
      "address": "0xacA8c4A955d42b95300d79A8cC7Fa18C90d9d0e6",
      "txHash": "0x8548a775f95e43cca83076f1e846daafa81b90d53a13057eac619fba65ce9133",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)1010",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)1010",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)1010",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)1010",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1900",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)1010": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1900": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b9b979fa743bf0671331cb5231bb3c378df51caf808c9409fd1afdafcddfc113": {
      "address": "0x23AD5e42d4803f5696A6cb3eB211f04BC8b62E66",
      "txHash": "0x033567a87736dd58a0021e54e05fc74bf55f2d9798f49a35275f6305a9cb70db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "XbcMigration",
            "label": "PEPE",
            "type": "t_contract(IBEP20)1035",
            "src": "XbcMigration.sol:27"
          },
          {
            "contract": "XbcMigration",
            "label": "XBN",
            "type": "t_contract(IBEP20)1035",
            "src": "XbcMigration.sol:28"
          },
          {
            "contract": "XbcMigration",
            "label": "XBC",
            "type": "t_contract(IBEP20)1035",
            "src": "XbcMigration.sol:29"
          },
          {
            "contract": "XbcMigration",
            "label": "WBNB",
            "type": "t_contract(IBEP20)1035",
            "src": "XbcMigration.sol:30"
          },
          {
            "contract": "XbcMigration",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)1925",
            "src": "XbcMigration.sol:31"
          },
          {
            "contract": "XbcMigration",
            "label": "maxMigrationSize",
            "type": "t_uint256",
            "src": "XbcMigration.sol:32"
          },
          {
            "contract": "XbcMigration",
            "label": "OneBNBtoXBCRate",
            "type": "t_uint256",
            "src": "XbcMigration.sol:33"
          }
        ],
        "types": {
          "t_contract(IBEP20)1035": {
            "label": "contract IBEP20"
          },
          "t_contract(IPancakeRouter02)1925": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
